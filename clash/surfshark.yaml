# Port of HTTP(S) proxy server on the local end
# port: 7890

# Port of SOCKS5 proxy server on the local end
# socks-port: 7891

# Transparent proxy server port for Linux and macOS
# redir-port: 7892

# HTTP(S) and SOCKS5 server on the same port
mixed-port: 7890

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to local-end server from
# other LAN IP addresses
allow-lan: false

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: info

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: false

# RESTful web API listening address
external-controller: 127.0.0.1:9090

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `${API}/ui`.
external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# Outbound interface name
# interface-name: en0

# Static hosts for DNS server and connection establishment, only works
# when `dns.enhanced-mode` is `redir-host`.
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names has a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  'mtalk.google.com': 108.177.125.188
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# DNS server settings
# This section is optional. When not present, DNS server will be disabled.
dns:
  enable: false
  listen: 0.0.0.0:53
  # ipv6: false # when false, response to AAAA questions will be empty

  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 119.29.29.29
    - 1.0.0.1
    #- 114.114.114.114
    #- 8.8.8.8
  enhanced-mode: redir-host # or fake-ip
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  
  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  fake-ip-filter:
    - '*.lan'
    - localhost.ptlogin2.qq.com
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - '+.xboxlive.com'
    - 'msftconnecttest.com'
    - 'xbox.*.microsoft.com'
  
  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - 119.29.29.29
    - tls://dns.rubyfish.cn:853 # DNS over TLS
    - https://1.1.1.1/dns-query # DNS over HTTPS
  # - 114.114.114.114 # default value
  # - 8.8.8.8 # default value
  # When `fallback` is present, the DNS server will send concurrent requests
  # to the servers in this section along with servers in `nameservers`.
  # The answers from fallback servers are used when the GEOIP country
  # is not `CN`.
  fallback:
    - https://cloudflare-dns.com/dns-query
  # - tcp://1.1.1.1
  
  # If IP addresses resolved with servers in `nameservers` are in the specified
  # subnets below, they are considered invalid and results from `fallback`
  # servers are used instead.
  #
  # IP address resolved with servers in `nameserver` is used when
  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.
  #
  # If `fallback-filter.geoip` is false, results from `fallback` nameservers
  # are always used, and answers from `nameservers` are discarded.
  #
  # This is a countermeasure against DNS pollution attacks.
  fallback-filter:
    geoip: true
    ipcidr:
      # - 240.0.0.0/4
    # domain:
    #   - '+.google.com'
    #   - '+.facebook.com'
    #   - '+.youtube.com'


proxies:
# 支持的协议及加密算法示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/blob/master/README.md

  # Shadowsocks(Websocket + TLS)


  # VMess(Websocket + TLS)

  # Trojan

# 服务器节点订阅
proxy-providers:
  # name: # Provider 名称
  #   type: http # http 或 file
  #   path: # 文件路径
  #   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
  #   interval: # 自动更新间隔，仅在类型为 HTTP 时可用
  #   health-check: # 健康检查选项从此处开始
  #     enable:
  #     url: 
  #     interval: 

  #
  # 「url」参数填写订阅链接
  #
  # 订阅链接可以使用 API 进行转换，如：https://dove.589669.xyz/web
  #
  #

  # 此处只是订阅示例，如果没有订阅链接的使用需求，此处及 proxy-groups 的相关内容可删除

  #DuckDuckGoList: #「冲鸭机场」订阅
    #type: http
    #url: "https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/ProxyList/List.yaml" # 放机场订阅链接
    #interval: 3600
    #path: ./Proxy/List.yaml # 注意此处文件名不可相同
    #health-check:
     # enable: true
      #interval: 600
      #url: http://www.gstatic.com/generate_204

  # DuckDuckGoUS: #「冲鸭机场」订阅USA地区节点
  #   type: http
  #   url: "https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/ProxyList/US.yaml" # 放机场订阅链接
  #   interval: 3600
  #   path: ./Proxy/US.yaml # 注意此处文件名不可相同
  #   health-check:
  #     enable: true
  #     interval: 600
  #     url: http://www.gstatic.com/generate_204
  
  
  # https://github.com/clashconfig/online/blob/main/SurfShark(44236).yml

  cn:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=CN%7CHK%7CTW&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-cn.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  us:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=US&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-us.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  ca:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=CA&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-ca.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  jp:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=JP&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-jp.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  sg:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=SG&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-sg.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  ar:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=AR&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-ar.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  br:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=BR&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-br.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  tr:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=TR&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-tr.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  au:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=AU&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-au.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  ru:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=RU&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-ru.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  ch:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=CH&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-ch.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  de:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=DE&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-de.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  fr:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=FR&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-fr.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  gb:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=GB&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-gb.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  nl:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=NL&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-nl.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  es:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&include=ES&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-es.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  others:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&exclude=CN%7CHK%7CTW%7CUS%7CCA%7CJP%7CSG%7CAU%7CCH%7CDE%7CGB%7CNL%7CFR%7CRU%7CES%7CTR%7CAR&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-others.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  all:
    type: http
    url: "https://pub-api-1.bianyuan.xyz/sub?target=clash&url=https%3A%2F%2Fraw.githubusercontent.com%2Fclashconfig%2Fonline%2Fmain%2FSurfShark(44236).yml&insert=false&filename=surfsharknode&emoji=true&list=true&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
    path: surfshark/provider-all.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204


proxy-groups:
# 策略组示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/blob/master/README.md

#
# 策略组说明
#
# 「MATCH」类似 Surge 的「Final」，此处用于选择白名单模式(PROXY 策略)和黑名单模式(DIRECT 策略)
#
# 「Streaming」和「StreamingSE」比较好理解，有专用于流媒体的节点就设置到其中，如果没有「StreamingSE」的需求可以连带 Rule 部分一起删掉，「Streaming」需至少保留 Rule，用「PROXY」即可。
#
# 「PROXY」是代理规则策略，它可以指定为某个节点或嵌套一个其他策略组，如：「自动测试」、「Fallback」或「负载均衡」的策略组，关于这 3 个策略组的具体示例可以看官方示例：https://github.com/Dreamacro/clash
#

  # 注意此处的「use」而不是「proxies」，当然也可以不用在此先嵌套一个策略组进行选择，可以直接使用，如
  #
  # # 代理节点选择
  # - name: "PROXY"
  #   type: select
  #   use:
  #     - DuckDuckGo # 嵌套使用订阅节点策略组
  #   proxies:
  #     - Fallback
  #     - 1
  #     - 2
  #     - 3
  #
  # 但如果订阅节点很多选起来就很麻烦，不如先嵌套一个策略组进行手动或自动的选择。

  # 手动选择订阅节点
# - name: "DuckDuckGo"
 #   type: select # 亦可使用 fallback 或 load-balance
 #   use: # 注意此处是「use」
#      - DuckDuckGoList # 这是上面「proxy-providers」的名称

  # - name: "US"
  #   type: select # 亦可使用 fallback 或 load-balance
  #   use: # 注意此处是「use」
  #     - DuckDuckGoUS # 这是上面「proxy-providers」的名称

  # 代理节点选择
#  - name: "PROXY"
#    type: select
#    proxies:
#      - Fallback
#      - 1
#      - DuckDuckGo # 嵌套使用订阅节点策略组

  # 白名单模式 PROXY, 黑名单模式 DIRECT, 不知道别动
  - name: "MATCH"
    type: select
    proxies:
      - PROXY
      - DIRECT

  - name: PROXY
    type: select
    proxies:
      - Auto
      - Countries
      - Fallback
      - Load-balance
      - Select
      
  - name: Auto
    type: url-test
    proxies:
      - 🇨🇳 China
      - 🇯🇵 Japan
      - 🇸🇬 Singapore
      - 🇺🇸 USA
      - 🇨🇦 Canada
      - 🇷🇺 Russia
      - 🇦🇷 Argentina
      - 🇧🇷 Brazil 
      - 🇹🇷 Turkey
      - 🇦🇺 Australia
      - 🇨🇭 Switzerland
      - 🇩🇪 Germany
      - 🇫🇷 France
      - 🇬🇧 England
      - 🇳🇱 Netherlands
      - 🇪🇸 Spain
      - Others
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
  - name: Load-balance
    type: load-balance
    proxies:
      - 🇨🇳 China
      - 🇯🇵 Japan
      - 🇸🇬 Singapore
      - 🇺🇸 USA
      - 🇨🇦 Canada
      - 🇷🇺 Russia
      - 🇦🇷 Argentina
      - 🇧🇷 Brazil 
      - 🇹🇷 Turkey
      - 🇦🇺 Australia
      - 🇨🇭 Switzerland
      - 🇩🇪 Germany
      - 🇫🇷 France
      - 🇬🇧 England
      - 🇳🇱 Netherlands
      - 🇪🇸 Spain
      - Others
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
  - name: Fallback
    type: fallback
    proxies:
      - 🇨🇳 China
      - 🇯🇵 Japan
      - 🇸🇬 Singapore
      - 🇺🇸 USA
      - 🇨🇦 Canada
      - 🇷🇺 Russia
      - 🇦🇷 Argentina
      - 🇹🇷 Turkey
      - 🇦🇺 Australia
      - 🇨🇭 Switzerland
      - 🇩🇪 Germany
      - 🇫🇷 France
      - 🇬🇧 England
      - 🇳🇱 Netherlands
      - 🇪🇸 Spain
      - Others
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
  - name: Select
    type: select
    proxies:
      - Auto
      - Countries
      - Fallback
      - Load-balance
      - All

  - name: Countries
    type: select
    proxies:
      - 🇨🇳 China
      - 🇯🇵 Japan
      - 🇸🇬 Singapore
      - 🇺🇸 USA
      - 🇨🇦 Canada
      - 🇦🇷 Argentina
      - 🇧🇷 Brazil 
      - 🇹🇷 Turkey
      - 🇷🇺 Russia
      - 🇦🇺 Australia
      - 🇨🇭 Switzerland
      - 🇩🇪 Germany
      - 🇫🇷 France
      - 🇬🇧 England
      - 🇳🇱 Netherlands
      - 🇪🇸 Spain
      - Others
      
  - name: 🇨🇳 China
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - cn
  - name: 🇯🇵 Japan
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - jp
  - name: 🇸🇬 Singapore
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - sg
  - name: 🇺🇸 USA
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - us
  - name: 🇨🇦 Canada
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - ca
  - name: 🇦🇷 Argentina
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - ar
  - name: - 🇧🇷 Brazil 
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - br
  - name: 🇹🇷 Turkey
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - tr
  - name: 🇷🇺 Russia
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - ru
  - name: 🇦🇺 Australia
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - au
  - name: 🇨🇭 Switzerland
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - ch
  - name: 🇩🇪 Germany
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - de
  - name: 🇫🇷 France
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - fr
  - name: 🇬🇧 England
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - gb
  - name: 🇳🇱 Netherlands
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - nl
  - name: 🇪🇸 Spain
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - es
  - name: Others
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - others
  - name: All
    type: url-test
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    use:
      - all
  # Fallback 比较实用的策略组类型，用于测试服务器节点的可用性，当第一个节点不可用时切换到第二个，以此类推。
 # - name: "Fallback"
 #   type: fallback
 #   proxies:
  #
  #  url: 'http://www.gstatic.com/generate_204'
  #  interval: 300

  # 国际流媒体服务
  - name: "Streaming"
    type: select
    proxies:
      - PROXY
      - Auto
      - Countries
      - Select
      - Fallback
      - Load-balance
      - DIRECT

  # 中国流媒体服务（面向海外版本）
  # 用于观看部分国内流媒体面向港澳台的地区的限定内容，此处应放港澳台节点，如果没有此需求可删除此处策略组及相关规则
  - name: "StreamingSE"
    type: select
    proxies:
      - 🇨🇳 China
      - PROXY
      - DIRECT
      
  - name: "Telegram"
    type: select
    proxies:
      - PROXY
      - Countries
      - DIRECT

# 关于 Rule Provider 请查阅：https://lancellc.gitbook.io/clash/clash-config-file/rule-provider

rule-providers:
# name: # Provider 名称
#   type: http # http 或 file
#   behavior: classical # 或 ipcidr、domain
#   path: # 文件路径
#   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
#   interval: # 自动更新间隔，仅在类型为 HTTP 时可用

  Unbreak:
    type: http
    behavior: classical
    path: ./RuleSet/Unbreak.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Unbreak.yaml
    interval: 86400

  Advertising:
    type: http
    behavior: classical
    path: ./RuleSet/Guard/Advertising.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Advertising.yaml
    interval: 86400

  Hijacking:
    type: http
    behavior: classical
    path: ./RuleSet/Guard/Hijacking.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Hijacking.yaml
    interval: 86400

  Privacy:
    type: http
    behavior: classical
    path: ./RuleSet/Guard/Privacy.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Guard/Privacy.yaml
    interval: 86400

  Streaming:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/Streaming.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Streaming.yaml
    interval: 86400

  StreamingSE:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/StreamingSE.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/StreamingSE.yaml
    interval: 86400

  Telegram:
    type: http
    behavior: classical
    path: ./RuleSet/Extra/Telegram/Telegram.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/Telegram/Telegram.yaml
    interval: 86400

  Global:
    type: http
    behavior: classical
    path: ./RuleSet/Global.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Global.yaml
    interval: 86400

  China:
    type: http
    behavior: classical
    path: ./RuleSet/China.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml
    interval: 86400

  ChinaIP:
    type: http
    behavior: ipcidr
    path: ./RuleSet/Extra/ChinaIP.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/ChinaIP.yaml
    interval: 86400

# 规则
rules:
  # Unbreak
  - RULE-SET,Unbreak,DIRECT
  
  # Advertising
  - RULE-SET,Advertising,REJECT
  # Hijacking
  - RULE-SET,Hijacking,REJECT
  # Privacy
  - RULE-SET,Privacy,REJECT
  
  # Global Area Network

  # (Streaming Media)
  - RULE-SET,Streaming,Streaming

  # (StreamingSE)
  - RULE-SET,StreamingSE,StreamingSE

  # Telegram
  - RULE-SET,Telegram,Telegram
  
  # (DNS Cache Pollution) / (IP Blackhole) / (Region-Restricted Access Denied) / (Network Jitter)
  - RULE-SET,Global,PROXY

  # China Area Network
  - RULE-SET,China,DIRECT

  # Local Area Network
  - IP-CIDR,192.168.0.0/16,DIRECT,no-resolve
  - IP-CIDR,10.0.0.0/8,DIRECT,no-resolve
  - IP-CIDR,172.16.0.0/12,DIRECT,no-resolve
  - IP-CIDR,127.0.0.0/8,DIRECT,no-resolve
  - IP-CIDR,100.64.0.0/10,DIRECT,no-resolve
  - IP-CIDR,224.0.0.0/4,DIRECT,no-resolve
  - IP-CIDR,fe80::/10,DIRECT,no-resolve

  # （可选）使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确的问题，使用 ChinaIP.yaml 时可禁用下列直至（包括）「GEOIP,CN」规则
  # - RULE-SET,ChinaIP,DIRECT
  # Tencent
  - IP-CIDR,119.28.28.28/32,DIRECT,no-resolve
  - IP-CIDR,182.254.116.0/24,DIRECT,no-resolve
  # GeoIP China
  - GEOIP,CN,DIRECT

  - MATCH,MATCH
